trigger: none

parameters:
  - name: deployEnv
    displayName: Where to deploy
    type: string
    default: dev
    values:
      - dev
      - production

variables:
  - group: Azure Info
  - group: Azure web app
  - group: client.env.${{ parameters.deployEnv }}

stages:
- stage: Build
  displayName: Build stage
  jobs:
    - job: Build
      pool:
        vmImage: $(AZ_VM_IMAGE_NAME)
      steps:
      - task: NodeTool@0
        displayName: "Install Node"
        inputs:
          versionSource: "spec"
          versionSpec: $(NODE_VERSION)

      - bash: |
          set -e
          echo "Write $(pwd)/.env.production"
          cat > .env.production <<EOF
          # Generated by Azure DevOps
          VITE_ACTIVE_DIRECTORY_REDIRECT_URI=$(VITE_ACTIVE_DIRECTORY_REDIRECT_URI)
          VITE_SPIRI_MOVE_API_URL=$(VITE_SPIRI_MOVE_API_URL)
          EOF
          echo
          cat .env.production
        workingDirectory: "$(System.DefaultWorkingDirectory)/$(PROJECT_ROOT)"
        displayName: "Generate .env.production"

      - script: |
          npm ci
          npm run build
        workingDirectory: "$(System.DefaultWorkingDirectory)/$(PROJECT_ROOT)"
        displayName: "Install dependencies and build app"
      
      - task: CopyFiles@2
        displayName: "Copy production build"
        inputs:
          contents: "$(PROJECT_ROOT)/dist/**"
          targetFolder: "$(Build.ArtifactStagingDirectory)"

      - task: PublishBuildArtifacts@1
        displayName: "Publish production build"
        inputs:
          pathToPublish: "$(Build.ArtifactStagingDirectory)/$(PROJECT_ROOT)/dist"
          artifactName: "$(AZ_WEB_APP_NAME)-$(Build.BuildId)"

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    environment: $(AZ_DEVOPS_ENVIRONMENT)
    pool:
      vmImage: $(AZ_VM_IMAGE_NAME)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            displayName: "Download production build artifact"
            inputs:
              buildType: "current"
              downloadType: "single"
              artifactName: "$(AZ_WEB_APP_NAME)-$(Build.BuildId)"
              downloadPath: "$(System.ArtifactsDirectory)"

          - task: AzureWebApp@1
            displayName: "Azure Web App Deploy: $(AZ_WEB_APP_NAME)"
            inputs:
              azureSubscription: $(AZ_SUBSCRIPTION)
              appType: webAppLinux
              deployToSlotOrASE: true
              resourceGroupName: FrontEnd
              slotName: ${{parameters.deployEnv}}
              appName: $(AZ_WEB_APP_NAME)
              package: "$(System.ArtifactsDirectory)/$(AZ_WEB_APP_NAME)-$(Build.BuildId)"
              startUpCommand: "pm2 serve /home/site/wwwroot --no-daemon --spa"
