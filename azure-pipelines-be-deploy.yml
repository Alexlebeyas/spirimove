# Python to Linux Web App on Azure
# Build your Python project and deploy it to Azure as a Linux Web App.
# Change python version to one thats appropriate for your application.
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

variables:
  - group: Azure Info
  - group: Azure backend app

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: BuildJob
    
    pool:
        vmImage: $(AZ_VM_IMAGE_NAME)
    
    variables:
    - group: backend.env.ci
    
    steps:
    - task: DockerCompose@0
      displayName: Build
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'build web'

    - task: DockerCompose@0
      displayName: Lint
      continueOnError: true
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'run web make lint'

    - task: DockerCompose@0
      displayName: Tests
      inputs:
        containerregistrytype: 'Container Registry'
        dockerComposeFile: '**/docker-compose.yml'
        action: 'Run a Docker Compose command'
        dockerComposeCommand: 'run web make test'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(PROJECT_ROOT)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      displayName: 'Upload package'
      artifact: drop

- stage: Deploy
  displayName: 'Deploy Web App'
  dependsOn: Build
  condition: succeeded()
  
  jobs:
  - deployment: DeploymentJob
  
    pool:
      vmImage: $(AZ_VM_IMAGE_NAME)
  
    environment: $(AZ_DEVOPS_ENVIRONMENT)
  
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureWebApp@1
            displayName: "Azure Web App Deploy to dev: $(AZ_WEB_APP_NAME)"
            inputs:
              azureSubscription: $(AZ_SUBSCRIPTION)
              deployToSlotOrASE: true
              resourceGroupName: Backend
              slotName: dev
              appName: $(AZ_WEB_APP_NAME)
              package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip